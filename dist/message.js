// source: message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.Message');
goog.provide('proto.Message.Location');
goog.provide('proto.Message.Status');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.Battery');
goog.require('proto.DropAlgorithm');
goog.require('proto.Enviro');
goog.require('proto.GPS');
goog.require('proto.Glider');
goog.require('proto.IMU');
goog.require('proto.Pitot');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Message.displayName = 'proto.Message';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recipient: jspb.Message.getFieldWithDefault(msg, 2, 0),
    packetNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    time: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pitot: (f = msg.getPitot()) && proto.Pitot.toObject(includeInstance, f),
    imu: (f = msg.getImu()) && proto.IMU.toObject(includeInstance, f),
    gps: (f = msg.getGps()) && proto.GPS.toObject(includeInstance, f),
    enviro: (f = msg.getEnviro()) && proto.Enviro.toObject(includeInstance, f),
    battery: (f = msg.getBattery()) && proto.Battery.toObject(includeInstance, f),
    dropAlgorithm: (f = msg.getDropAlgorithm()) && proto.DropAlgorithm.toObject(includeInstance, f),
    glider: (f = msg.getGlider()) && proto.Glider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Message}
 */
proto.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Message;
  return proto.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Message}
 */
proto.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Message.Location} */ (reader.readEnum());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {!proto.Message.Location} */ (reader.readEnum());
      msg.setRecipient(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPacketNumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {!proto.Message.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = new proto.Pitot;
      reader.readMessage(value,proto.Pitot.deserializeBinaryFromReader);
      msg.setPitot(value);
      break;
    case 7:
      var value = new proto.IMU;
      reader.readMessage(value,proto.IMU.deserializeBinaryFromReader);
      msg.setImu(value);
      break;
    case 8:
      var value = new proto.GPS;
      reader.readMessage(value,proto.GPS.deserializeBinaryFromReader);
      msg.setGps(value);
      break;
    case 9:
      var value = new proto.Enviro;
      reader.readMessage(value,proto.Enviro.deserializeBinaryFromReader);
      msg.setEnviro(value);
      break;
    case 10:
      var value = new proto.Battery;
      reader.readMessage(value,proto.Battery.deserializeBinaryFromReader);
      msg.setBattery(value);
      break;
    case 11:
      var value = new proto.DropAlgorithm;
      reader.readMessage(value,proto.DropAlgorithm.deserializeBinaryFromReader);
      msg.setDropAlgorithm(value);
      break;
    case 12:
      var value = new proto.Glider;
      reader.readMessage(value,proto.Glider.deserializeBinaryFromReader);
      msg.setGlider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRecipient();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPacketNumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPitot();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Pitot.serializeBinaryToWriter
    );
  }
  f = message.getImu();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.IMU.serializeBinaryToWriter
    );
  }
  f = message.getGps();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.GPS.serializeBinaryToWriter
    );
  }
  f = message.getEnviro();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Enviro.serializeBinaryToWriter
    );
  }
  f = message.getBattery();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.Battery.serializeBinaryToWriter
    );
  }
  f = message.getDropAlgorithm();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.DropAlgorithm.serializeBinaryToWriter
    );
  }
  f = message.getGlider();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.Glider.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.Message.Location = {
  GROUND_STATION: 0,
  PLANE: 1,
  GLIDER0: 2,
  GLIDER1: 3,
  ANY: 4
};

/**
 * @enum {number}
 */
proto.Message.Status = {
  POWER_ON: 0,
  CALIBRATING: 1,
  READY: 2
};

/**
 * optional Location sender = 1;
 * @return {!proto.Message.Location}
 */
proto.Message.prototype.getSender = function() {
  return /** @type {!proto.Message.Location} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Message.Location} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setSender = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Location recipient = 2;
 * @return {!proto.Message.Location}
 */
proto.Message.prototype.getRecipient = function() {
  return /** @type {!proto.Message.Location} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.Message.Location} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setRecipient = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 packet_number = 3;
 * @return {number}
 */
proto.Message.prototype.getPacketNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setPacketNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 time = 4;
 * @return {number}
 */
proto.Message.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Status status = 5;
 * @return {!proto.Message.Status}
 */
proto.Message.prototype.getStatus = function() {
  return /** @type {!proto.Message.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.Message.Status} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Pitot pitot = 6;
 * @return {?proto.Pitot}
 */
proto.Message.prototype.getPitot = function() {
  return /** @type{?proto.Pitot} */ (
    jspb.Message.getWrapperField(this, proto.Pitot, 6));
};


/**
 * @param {?proto.Pitot|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setPitot = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearPitot = function() {
  return this.setPitot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasPitot = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional IMU imu = 7;
 * @return {?proto.IMU}
 */
proto.Message.prototype.getImu = function() {
  return /** @type{?proto.IMU} */ (
    jspb.Message.getWrapperField(this, proto.IMU, 7));
};


/**
 * @param {?proto.IMU|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setImu = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearImu = function() {
  return this.setImu(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasImu = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GPS gps = 8;
 * @return {?proto.GPS}
 */
proto.Message.prototype.getGps = function() {
  return /** @type{?proto.GPS} */ (
    jspb.Message.getWrapperField(this, proto.GPS, 8));
};


/**
 * @param {?proto.GPS|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setGps = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearGps = function() {
  return this.setGps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasGps = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Enviro enviro = 9;
 * @return {?proto.Enviro}
 */
proto.Message.prototype.getEnviro = function() {
  return /** @type{?proto.Enviro} */ (
    jspb.Message.getWrapperField(this, proto.Enviro, 9));
};


/**
 * @param {?proto.Enviro|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setEnviro = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearEnviro = function() {
  return this.setEnviro(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasEnviro = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Battery battery = 10;
 * @return {?proto.Battery}
 */
proto.Message.prototype.getBattery = function() {
  return /** @type{?proto.Battery} */ (
    jspb.Message.getWrapperField(this, proto.Battery, 10));
};


/**
 * @param {?proto.Battery|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setBattery = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearBattery = function() {
  return this.setBattery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasBattery = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional DropAlgorithm drop_algorithm = 11;
 * @return {?proto.DropAlgorithm}
 */
proto.Message.prototype.getDropAlgorithm = function() {
  return /** @type{?proto.DropAlgorithm} */ (
    jspb.Message.getWrapperField(this, proto.DropAlgorithm, 11));
};


/**
 * @param {?proto.DropAlgorithm|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setDropAlgorithm = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearDropAlgorithm = function() {
  return this.setDropAlgorithm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasDropAlgorithm = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Glider glider = 12;
 * @return {?proto.Glider}
 */
proto.Message.prototype.getGlider = function() {
  return /** @type{?proto.Glider} */ (
    jspb.Message.getWrapperField(this, proto.Glider, 12));
};


/**
 * @param {?proto.Glider|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setGlider = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearGlider = function() {
  return this.setGlider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasGlider = function() {
  return jspb.Message.getField(this, 12) != null;
};


