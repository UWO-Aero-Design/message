/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Message_Location {
    Message_Location_GROUND_STATION = 0,
    Message_Location_PLANE = 1,
    Message_Location_GLIDER0 = 2,
    Message_Location_GLIDER1 = 3,
    Message_Location_ANY = 4
} Message_Location;

typedef enum _Message_Status {
    Message_Status_POWER_ON = 0,
    Message_Status_CALIBRATING = 1,
    Message_Status_READY = 2
} Message_Status;

/* Struct definitions */
typedef struct _Battery {
    float voltage;
    float current;
} Battery;

typedef struct _DropAlgorithm {
    float time_to_drop;
} DropAlgorithm;

typedef struct _Enviro {
    float altitude;
    float temperature;
    float pressure;
} Enviro;

typedef struct _GPS {
    bool fix;
    float lat;
    float lon;
    float speed;
    uint32_t satellites;
    float altitude;
    uint32_t time;
    uint32_t date;
} GPS;

typedef struct _Glider {
    bool pitch_up;
} Glider;

typedef struct _IMU {
    float ax;
    float ay;
    float az;
    float gx;
    float gy;
    float gz;
    float mx;
    float my;
    float mz;
    float yaw;
    float pitch;
    float roll;
} IMU;

typedef struct _Pitot {
    float differential_pressure;
} Pitot;

typedef struct _Message {
    Message_Location sender;
    Message_Location recipient;
    int32_t packet_number;
    int64_t time;
    Message_Status status;
    bool has_pitot;
    Pitot pitot;
    bool has_imu;
    IMU imu;
    bool has_gps;
    GPS gps;
    bool has_enviro;
    Enviro enviro;
    bool has_battery;
    Battery battery;
    bool has_drop_algorithm;
    DropAlgorithm drop_algorithm;
    bool has_glider;
    Glider glider;
} Message;


/* Helper constants for enums */
#define _Message_Location_MIN Message_Location_GROUND_STATION
#define _Message_Location_MAX Message_Location_ANY
#define _Message_Location_ARRAYSIZE ((Message_Location)(Message_Location_ANY+1))

#define _Message_Status_MIN Message_Status_POWER_ON
#define _Message_Status_MAX Message_Status_READY
#define _Message_Status_ARRAYSIZE ((Message_Status)(Message_Status_READY+1))


/* Initializer values for message structs */
#define Message_init_default                     {_Message_Location_MIN, _Message_Location_MIN, 0, 0, _Message_Status_MIN, false, Pitot_init_default, false, IMU_init_default, false, GPS_init_default, false, Enviro_init_default, false, Battery_init_default, false, DropAlgorithm_init_default, false, Glider_init_default}
#define Pitot_init_default                       {0}
#define IMU_init_default                         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define GPS_init_default                         {0, 0, 0, 0, 0, 0, 0, 0}
#define Enviro_init_default                      {0, 0, 0}
#define Battery_init_default                     {0, 0}
#define DropAlgorithm_init_default               {0}
#define Glider_init_default                      {0}
#define Message_init_zero                        {_Message_Location_MIN, _Message_Location_MIN, 0, 0, _Message_Status_MIN, false, Pitot_init_zero, false, IMU_init_zero, false, GPS_init_zero, false, Enviro_init_zero, false, Battery_init_zero, false, DropAlgorithm_init_zero, false, Glider_init_zero}
#define Pitot_init_zero                          {0}
#define IMU_init_zero                            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define GPS_init_zero                            {0, 0, 0, 0, 0, 0, 0, 0}
#define Enviro_init_zero                         {0, 0, 0}
#define Battery_init_zero                        {0, 0}
#define DropAlgorithm_init_zero                  {0}
#define Glider_init_zero                         {0}

/* Field tags (for use in manual encoding/decoding) */
#define Battery_voltage_tag                      1
#define Battery_current_tag                      2
#define DropAlgorithm_time_to_drop_tag           1
#define Enviro_altitude_tag                      1
#define Enviro_temperature_tag                   2
#define Enviro_pressure_tag                      3
#define GPS_fix_tag                              1
#define GPS_lat_tag                              2
#define GPS_lon_tag                              3
#define GPS_speed_tag                            4
#define GPS_satellites_tag                       5
#define GPS_altitude_tag                         6
#define GPS_time_tag                             7
#define GPS_date_tag                             8
#define Glider_pitch_up_tag                      1
#define IMU_ax_tag                               1
#define IMU_ay_tag                               2
#define IMU_az_tag                               3
#define IMU_gx_tag                               4
#define IMU_gy_tag                               5
#define IMU_gz_tag                               6
#define IMU_mx_tag                               7
#define IMU_my_tag                               8
#define IMU_mz_tag                               9
#define IMU_yaw_tag                              10
#define IMU_pitch_tag                            11
#define IMU_roll_tag                             12
#define Pitot_differential_pressure_tag          1
#define Message_sender_tag                       1
#define Message_recipient_tag                    2
#define Message_packet_number_tag                3
#define Message_time_tag                         4
#define Message_status_tag                       5
#define Message_pitot_tag                        6
#define Message_imu_tag                          7
#define Message_gps_tag                          8
#define Message_enviro_tag                       9
#define Message_battery_tag                      10
#define Message_drop_algorithm_tag               11
#define Message_glider_tag                       12

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sender,            1) \
X(a, STATIC,   SINGULAR, UENUM,    recipient,         2) \
X(a, STATIC,   SINGULAR, INT32,    packet_number,     3) \
X(a, STATIC,   SINGULAR, INT64,    time,              4) \
X(a, STATIC,   SINGULAR, UENUM,    status,            5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  pitot,             6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  imu,               7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gps,               8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  enviro,            9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  battery,          10) \
X(a, STATIC,   OPTIONAL, MESSAGE,  drop_algorithm,   11) \
X(a, STATIC,   OPTIONAL, MESSAGE,  glider,           12)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL
#define Message_pitot_MSGTYPE Pitot
#define Message_imu_MSGTYPE IMU
#define Message_gps_MSGTYPE GPS
#define Message_enviro_MSGTYPE Enviro
#define Message_battery_MSGTYPE Battery
#define Message_drop_algorithm_MSGTYPE DropAlgorithm
#define Message_glider_MSGTYPE Glider

#define Pitot_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    differential_pressure,   1)
#define Pitot_CALLBACK NULL
#define Pitot_DEFAULT NULL

#define IMU_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    ax,                1) \
X(a, STATIC,   SINGULAR, FLOAT,    ay,                2) \
X(a, STATIC,   SINGULAR, FLOAT,    az,                3) \
X(a, STATIC,   SINGULAR, FLOAT,    gx,                4) \
X(a, STATIC,   SINGULAR, FLOAT,    gy,                5) \
X(a, STATIC,   SINGULAR, FLOAT,    gz,                6) \
X(a, STATIC,   SINGULAR, FLOAT,    mx,                7) \
X(a, STATIC,   SINGULAR, FLOAT,    my,                8) \
X(a, STATIC,   SINGULAR, FLOAT,    mz,                9) \
X(a, STATIC,   SINGULAR, FLOAT,    yaw,              10) \
X(a, STATIC,   SINGULAR, FLOAT,    pitch,            11) \
X(a, STATIC,   SINGULAR, FLOAT,    roll,             12)
#define IMU_CALLBACK NULL
#define IMU_DEFAULT NULL

#define GPS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     fix,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    lat,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    lon,               3) \
X(a, STATIC,   SINGULAR, FLOAT,    speed,             4) \
X(a, STATIC,   SINGULAR, UINT32,   satellites,        5) \
X(a, STATIC,   SINGULAR, FLOAT,    altitude,          6) \
X(a, STATIC,   SINGULAR, UINT32,   time,              7) \
X(a, STATIC,   SINGULAR, UINT32,   date,              8)
#define GPS_CALLBACK NULL
#define GPS_DEFAULT NULL

#define Enviro_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    altitude,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure,          3)
#define Enviro_CALLBACK NULL
#define Enviro_DEFAULT NULL

#define Battery_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           2)
#define Battery_CALLBACK NULL
#define Battery_DEFAULT NULL

#define DropAlgorithm_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    time_to_drop,      1)
#define DropAlgorithm_CALLBACK NULL
#define DropAlgorithm_DEFAULT NULL

#define Glider_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     pitch_up,          1)
#define Glider_CALLBACK NULL
#define Glider_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;
extern const pb_msgdesc_t Pitot_msg;
extern const pb_msgdesc_t IMU_msg;
extern const pb_msgdesc_t GPS_msg;
extern const pb_msgdesc_t Enviro_msg;
extern const pb_msgdesc_t Battery_msg;
extern const pb_msgdesc_t DropAlgorithm_msg;
extern const pb_msgdesc_t Glider_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg
#define Pitot_fields &Pitot_msg
#define IMU_fields &IMU_msg
#define GPS_fields &GPS_msg
#define Enviro_fields &Enviro_msg
#define Battery_fields &Battery_msg
#define DropAlgorithm_fields &DropAlgorithm_msg
#define Glider_fields &Glider_msg

/* Maximum encoded size of messages (where known) */
#define Message_size                             179
#define Pitot_size                               5
#define IMU_size                                 60
#define GPS_size                                 40
#define Enviro_size                              15
#define Battery_size                             10
#define DropAlgorithm_size                       5
#define Glider_size                              2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
